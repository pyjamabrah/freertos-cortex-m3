CURR_DIR = $(PWD)
OUTPUT_DIR := ./out
IMAGE := $(OUTPUT_DIR)/freertos-cortex-m3.out

CC = arm-none-eabi-gcc
LD = arm-none-eabi-gcc
SIZE = arm-none-eabi-size
MAKE = make

CFLAGS += -ffreestanding -mthumb -mcpu=cortex-m3
CFLAGS += -Wall -Wextra -Wshadow -Wno-unused-value
CFLAGS += -g3 -Os -ffunction-sections -fdata-sections
CFLAGS += -MMD -MP -MF"$(@:%.o=%.d)" -MT $@
#CFLAGS += -std=c99
#CFLAGS += -Wpedantic -fanalyzer
#CFLAGS += -flto
CFLAGS += $(INCLUDE_DIRS)

LDFLAGS = -T ./mps2_m3.ld
LDFLAGS += -Xlinker -Map=$(OUTPUT_DIR)/RTOSDemo.map
LDFLAGS += -Xlinker --gc-sections
LDFLAGS += -nostartfiles
LDFLAGS += -specs=nano.specs -specs=nosys.specs # -specs=rdimon.specs

#
# Kernel source files [ From FreeRTOS/Source/* ]
#
INCLUDE_DIRS += -I$(CURR_DIR)/include -I$(CURR_DIR)/CMSIS

SOURCE_FILES += $(CURR_DIR)/tasks.c
SOURCE_FILES += $(CURR_DIR)/list.c
SOURCE_FILES += $(CURR_DIR)/queue.c
SOURCE_FILES += $(CURR_DIR)/timers.c
SOURCE_FILES += $(CURR_DIR)/heap_4.c

#
# Port source files [ From FreeRTOS/Source/portable/<compiler>/<arch+_core-type>/* ]
# port.c, portmacro.h, portable.h
#
SOURCE_FILES += $(CURR_DIR)/port.c

#
# Some Demp app which proves the FreeRTOS is functional
# Demo Source files [ From FreeRTOS/Demo/<processor_board_variant>/* ]
#                   [ From FreeRTOS/Demo/Common/<Minimal|Full>/* ]
#
SOURCE_FILES += $(CURR_DIR)/IntQueue.c
SOURCE_FILES += $(CURR_DIR)/IntQueueTimer.c
SOURCE_FILES += $(CURR_DIR)/main.c
SOURCE_FILES += $(CURR_DIR)/startup_gcc.c

#
# Compilation Magic, don't care for us
#
# Create a list of object files with the desired output directory path.
OBJS = $(SOURCE_FILES:%.c=%.o)
OBJS_NO_PATH = $(notdir $(OBJS))
OBJS_OUTPUT = $(OBJS_NO_PATH:%.o=$(OUTPUT_DIR)/%.o)

# Create a list of dependency files with the desired output directory path.
DEP_FILES := $(SOURCE_FILES:%.c=$(OUTPUT_DIR)/%.d)
DEP_FILES_NO_PATH = $(notdir $(DEP_FILES))
DEP_OUTPUT = $(DEP_FILES_NO_PATH:%.d=$(OUTPUT_DIR)/%.d)

all: $(IMAGE)

%.o : %.c
$(OUTPUT_DIR)/%.o : %.c $(OUTPUT_DIR)/%.d Makefile
	$(CC) $(CFLAGS) -c $< -o $@

$(IMAGE): ./mps2_m3.ld $(OBJS_OUTPUT) Makefile
	@echo ""
	@echo ""
	@echo "--- Final linking ---"
	@echo ""
	$(LD) $(CFLAGS) $(LDFLAGS) $(OBJS_OUTPUT) -o $(IMAGE)
	$(SIZE) $(IMAGE)

$(DEP_OUTPUT):
include $(wildcard $(DEP_OUTPUT))

clean:
	rm -f $(IMAGE) $(OUTPUT_DIR)/freertos-cortex-m3.map $(OUTPUT_DIR)/*.o $(OUTPUT_DIR)/*.d

#use "make print-[VARIABLE_NAME] to print the value of a variable generated by
#this makefile.
print-%  : ; @echo $* = $($*)

.PHONY: all clean


